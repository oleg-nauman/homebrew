---
- name: Install LAP services
  apt: name={{ item }} state=present
  with_items:
   - apache2
   - php5-mysql
   - php5
   - libapache2-mod-php5
   - php5-mcrypt
   - php5-gd
   - libssh2-php

- name: Download WordPress
  get_url:
    url=https://wordpress.org/latest.tar.gz 
    dest=/tmp/wordpress.tar.gz
    validate_certs=no 

- name: Extract WordPress 
  unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no 

- name: Update default Apache site
  lineinfile: 
    dest=/etc/apache2/sites-enabled/000-default.conf 
    regexp="(.)+DocumentRoot /var/www/html"
    line="DocumentRoot /var/www/wordpress"
  notify:
    - restart apache

- name: Copy sample config file
  command: cp /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php

- name: Update WordPress config file
  lineinfile:
   dest=/var/www/wordpress/wp-config.php
   regexp="{{ item.regexp }}"
   line="{{ item.line }}"
  with_items:
   - {'regexp': "define\\('DB_HOST', '(.)+'\\);", 'line': "define('DB_HOST', '{{ groups['database'][0] }}');"}
   - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{ hostvars[groups['database'][0]]['wp_mysql_db'] }}');"}
   - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{ hostvars[groups['database'][0]]['wp_mysql_user'] }}');"}
   - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{ hostvars[groups['database'][0]]['wp_mysql_password'] }}');"}

# We will run the request below, it will initialize the Wordpress database
# structure

- name: Initialize Wordpress
  uri:
   url: "http://{{ groups['backend'][0] }}/wp-admin/install.php?step=2"
   method: POST
   body: "weblog_title={{ hostvars[groups['database'][0]]['wp_title'] }}&user_name={{ hostvars[groups['database'][0]]['wp_admin_username'] }}&admin_email={{ hostvars[groups['database'][0]]['wp_admin_email'] }}&admin_password={{ hostvars[groups['database'][0]]['wp_admin_password'] }}&admin_password2={{ hostvars[groups['database'][0]]['wp_admin_password'] }}&pw_weak=1"
   headers:
    Content-Type: "application/x-www-form-urlencoded"

# It is ugly. 
# Unfortunately it is require nested loops for correct actions:
# a) `meta_value` substitution based on user role value;
# b) `user_id` correct substitution if we are preparing all those INSERTions at once
#    in the loop
# but is even worse readable than existing code
# We will prepare and perform queries for every role groups independently,
# looping through the users list of every role group
# It is require Wordpress DB structure to be initialized correctly, this why the first
# administrator user needs to be added using web interface ( emulated above )

- name: Administrator ( role > 7 )
  command:
   mysql -e "INSERT INTO `wp_users` (`user_login`, `user_pass`, `user_nicename`, `user_email`, `user_status`)
        VALUES ('{{ item.value.login }}', MD5('{{ item.value.password }}'), '{{ item.value.name }}', '{{ item.value.email }}', '0');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_capabilities', 'a:1:{s:13:"administrator";s:1:"1";}');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_user_level', '{{ item.value.role }}');" -h "{{ groups['database'][0] }}" -u root "{{ hostvars[groups['database'][0]]['wp_mysql_db'] }}"
  with_dict: "{{ wp_users }}"
  when: item.value.role > 7


- name: Editor ( role > 2 and role < 8 )
  command:
   mysql -e "INSERT INTO `wp_users` (`user_login`, `user_pass`, `user_nicename`, `user_email`, `user_status`)
        VALUES ('{{ item.value.login }}', MD5('{{ item.value.password }}'), '{{ item.value.name }}', '{{ item.value.email }}', '0');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_capabilities', 'a:1:{s:6:"editor";s:1:"1";}');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_user_level', '{{ item.value.role }}');" -h "{{ groups['database'][0] }}" -u root "{{ hostvars[groups['database'][0]]['wp_mysql_db'] }}"
  with_dict: "{{ wp_users }}"
  when: item.value.role > 2 and item.value.role < 8


- name: Author ( role = 2  )
  command:
    mysql -e "INSERT INTO `wp_users` (`user_login`, `user_pass`, `user_nicename`, `user_email`, `user_status`)
        VALUES ('{{ item.value.login }}', MD5('{{ item.value.password }}'), '{{ item.value.name }}', '{{ item.value.email }}', '0');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_capabilities', 'a:1:{s:6:"author";s:1:"1";}');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_user_level', '{{ item.value.role }}');" -h "{{ groups['database'][0] }}" -u root "{{ hostvars[groups['database'][0]]['wp_mysql_db'] }}"
  with_dict: "{{ wp_users }}"
  when: item.value.role == 2 


- name: Contributor ( role=1  )
  command:
   mysql -e "INSERT INTO `wp_users` (`user_login`, `user_pass`, `user_nicename`, `user_email`, `user_status`)
        VALUES ('{{ item.value.login }}', MD5('{{ item.value.password }}'), '{{ item.value.name }}', '{{ item.value.email }}', '0');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_capabilities', 'a:1:{s:11:"contributor";s:1:"1";}');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_user_level', '{{ item.value.role }}');" -h "{{ groups['database'][0] }}" -u root "{{ hostvars[groups['database'][0]]['wp_mysql_db'] }}"
  with_dict: "{{ wp_users }}"
  when: item.value.role == 1


- name: Subscriber ( role = 0 )
  command:
   mysql -e "INSERT INTO `wp_users` (`user_login`, `user_pass`, `user_nicename`, `user_email`, `user_status`)
        VALUES ('{{ item.value.login }}', MD5('{{ item.value.password }}'), '{{ item.value.name }}', '{{ item.value.email }}', '0');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_capabilities', 'a:1:{s:10:"subscriber";s:1:"1";}');
        INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`)
        VALUES (NULL, (Select max(id) FROM wp_users), 'wp_user_level', '{{ item.value.role }}');" -h "{{ groups['database'][0] }}" -u root "{{ hostvars[groups['database'][0]]['wp_mysql_db'] }}"
  with_dict: "{{ wp_users }}"
  when: item.value.role == 0

